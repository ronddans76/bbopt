"""
The serving backend. Selects the best existing data point.
"""

from bbopt.util import best_example
from bbopt.backends.util import Backend


class ServingBackend(Backend):
    """The serving backend uses the parameter values from the best example."""
    backend_name = "serving"

    def __init__(self, examples, params):
        # since we're serving, ignore params and just extract the best example
        self.current_values = best_example(examples)["values"]

    def fallback_func(self, name, func, *args, **kwargs):
        raise ValueError(f"missing data for parameter {name} while serving and no guess")

    def attempt_update(self, examples, params):
        self.current_values = best_example(examples)["values"]
        return True


# Registered names:

ServingBackend.register()
ServingBackend.register_alias(None)
ServingBackend.register_alg("serving")
ServingBackend.register_alg(None)
