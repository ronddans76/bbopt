# BBopt boilerplate:
from bbopt import BlackBoxOptimizer
bb = BlackBoxOptimizer(file=__file__)
if __name__ == "__main__":
    bb.run(backend="scikit-optimize")

use_high = bb.getrandbits("use high", 1, guess=0) |> bool
if use_high:
    reward = bb.randrange("x_high", 10, 20, placeholder_when_missing=10)
else:
    reward = bb.randrange("x_low", 10, placeholder_when_missing=0)

bb.maximize(reward)

if __name__ == "__main__":
    print(repr(reward))
